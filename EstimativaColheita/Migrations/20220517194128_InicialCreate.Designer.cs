// <auto-generated />
using System;
using EstimativaColheita.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EstimativaColheita.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20220517194128_InicialCreate")]
    partial class InicialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("EstimativaColheita.Models.ColheitaRealizadaModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("Caixas")
                        .HasColumnType("int");

                    b.Property<DateTime>("DataLancamento")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdContrato")
                        .HasColumnType("int");

                    b.Property<int>("IdTalhao")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IdContrato");

                    b.HasIndex("IdTalhao");

                    b.ToTable("ColheitasRealizadas", (string)null);
                });

            modelBuilder.Entity("EstimativaColheita.Models.ContratoModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit");

                    b.Property<int>("CodigoInterno")
                        .HasColumnType("int");

                    b.Property<int>("IdFiscalCampo")
                        .HasColumnType("int");

                    b.Property<string>("Propriedade")
                        .IsRequired()
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Titular")
                        .IsRequired()
                        .HasColumnType("varchar(200)");

                    b.HasKey("Id");

                    b.HasIndex("IdFiscalCampo");

                    b.ToTable("Contratos", (string)null);
                });

            modelBuilder.Entity("EstimativaColheita.Models.EstimativaColheitaModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("Caixas")
                        .HasColumnType("int");

                    b.Property<DateTime>("DataAlteracao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataLancamento")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdContrato")
                        .HasColumnType("int");

                    b.Property<int>("IdMotivoAlteracao")
                        .HasColumnType("int");

                    b.Property<int>("IdTalhao")
                        .HasColumnType("int");

                    b.Property<int>("IdTipoLancamento")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IdContrato");

                    b.HasIndex("IdMotivoAlteracao");

                    b.HasIndex("IdTalhao");

                    b.HasIndex("IdTipoLancamento");

                    b.ToTable("EstimativasColheita", (string)null);
                });

            modelBuilder.Entity("EstimativaColheita.Models.FiscalCampoModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Apelido")
                        .IsRequired()
                        .HasColumnType("varchar(20)");

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit");

                    b.Property<int>("CodigoInterno")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.ToTable("FiscaisCampo", (string)null);
                });

            modelBuilder.Entity("EstimativaColheita.Models.MotivoAlteracaoModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("varchar(200)");

                    b.HasKey("Id");

                    b.ToTable("MotivosAlteracoes", (string)null);
                });

            modelBuilder.Entity("EstimativaColheita.Models.TalhaoModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("AnoPlantio")
                        .HasColumnType("int");

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit");

                    b.Property<int>("CodigoInterno")
                        .HasColumnType("int");

                    b.Property<int>("IdContrato")
                        .HasColumnType("int");

                    b.Property<int>("IdVariedade")
                        .HasColumnType("int");

                    b.Property<int>("QuantidadePes")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IdContrato");

                    b.HasIndex("IdVariedade");

                    b.ToTable("Talhoes", (string)null);
                });

            modelBuilder.Entity("EstimativaColheita.Models.TipoLancamentoModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.ToTable("TiposLancamento", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Descricao = "ESTIMADO"
                        },
                        new
                        {
                            Id = 2,
                            Descricao = "COLHIDO"
                        });
                });

            modelBuilder.Entity("EstimativaColheita.Models.VariedadeModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit");

                    b.Property<int>("CodigoInterno")
                        .HasColumnType("int");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Variedades", (string)null);
                });

            modelBuilder.Entity("EstimativaColheita.Models.ColheitaRealizadaModel", b =>
                {
                    b.HasOne("EstimativaColheita.Models.ContratoModel", "Contrato")
                        .WithMany("ColheitasRealizadas")
                        .HasForeignKey("IdContrato")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("EstimativaColheita.Models.TalhaoModel", "Talhao")
                        .WithMany("ColheitasRealizadas")
                        .HasForeignKey("IdTalhao")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Contrato");

                    b.Navigation("Talhao");
                });

            modelBuilder.Entity("EstimativaColheita.Models.ContratoModel", b =>
                {
                    b.HasOne("EstimativaColheita.Models.FiscalCampoModel", "FiscalCampo")
                        .WithMany("Contratos")
                        .HasForeignKey("IdFiscalCampo")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("FiscalCampo");
                });

            modelBuilder.Entity("EstimativaColheita.Models.EstimativaColheitaModel", b =>
                {
                    b.HasOne("EstimativaColheita.Models.ContratoModel", "Contrato")
                        .WithMany("Estimativas")
                        .HasForeignKey("IdContrato")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("EstimativaColheita.Models.MotivoAlteracaoModel", "MotivoAlteracao")
                        .WithMany("Estimativas")
                        .HasForeignKey("IdMotivoAlteracao")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("EstimativaColheita.Models.TalhaoModel", "Talhao")
                        .WithMany("Estimativas")
                        .HasForeignKey("IdTalhao")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("EstimativaColheita.Models.TipoLancamentoModel", "TipoLancamento")
                        .WithMany("Estimativas")
                        .HasForeignKey("IdTipoLancamento")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Contrato");

                    b.Navigation("MotivoAlteracao");

                    b.Navigation("Talhao");

                    b.Navigation("TipoLancamento");
                });

            modelBuilder.Entity("EstimativaColheita.Models.TalhaoModel", b =>
                {
                    b.HasOne("EstimativaColheita.Models.ContratoModel", "Contrato")
                        .WithMany("Talhoes")
                        .HasForeignKey("IdContrato")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("EstimativaColheita.Models.VariedadeModel", "Variedade")
                        .WithMany("Talhoes")
                        .HasForeignKey("IdVariedade")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Contrato");

                    b.Navigation("Variedade");
                });

            modelBuilder.Entity("EstimativaColheita.Models.ContratoModel", b =>
                {
                    b.Navigation("ColheitasRealizadas");

                    b.Navigation("Estimativas");

                    b.Navigation("Talhoes");
                });

            modelBuilder.Entity("EstimativaColheita.Models.FiscalCampoModel", b =>
                {
                    b.Navigation("Contratos");
                });

            modelBuilder.Entity("EstimativaColheita.Models.MotivoAlteracaoModel", b =>
                {
                    b.Navigation("Estimativas");
                });

            modelBuilder.Entity("EstimativaColheita.Models.TalhaoModel", b =>
                {
                    b.Navigation("ColheitasRealizadas");

                    b.Navigation("Estimativas");
                });

            modelBuilder.Entity("EstimativaColheita.Models.TipoLancamentoModel", b =>
                {
                    b.Navigation("Estimativas");
                });

            modelBuilder.Entity("EstimativaColheita.Models.VariedadeModel", b =>
                {
                    b.Navigation("Talhoes");
                });
#pragma warning restore 612, 618
        }
    }
}
